package ru.relex.education.zodiac;
import ru.relex.education.zodiac.SignOfZodiac;
import ru.relex.education.zodiac.SignOfZodiac.*;
/**
 * Класс решения задач с использованием знаков зодиака.
 * @author Vladimir K.
 */
public class Zodiac2 {

    /**
     * Метод поиска знака зодиака по заданным месяце и дне с использованием двумерного массива.
     * 
     * @param month
     *            месяц
     * @param day
     *            день
     * @return знак зодиака
     */
    public static SignOfZodiac determineZodiac(int month, int day) {
        int i = 0;
        int j = 0;
        int sum = 0;
        SignOfZodiac signum;
        String sign[][] = new String[12][];
        sign[0] = new String[31];
        sign[1] = new String[29];
        sign[2] = new String[31];
        sign[3] = new String[30];
        sign[4] = new String[31];
        sign[5] = new String[30];
        sign[6] = new String[31];
        sign[7] = new String[31];
        sign[8] = new String[30];
        sign[9] = new String[31];
        sign[10] = new String[30];
        sign[11] = new String[31];

        for (i = 0; i < sign.length; i++) {
            for (j = 0; j < sign[i].length; j++) {
                sum = i * 100 + j;
                if ((sum >= 20) && (sum < 120)) {
                    sign[i][j] = SignOfZodiac.ВОДОЛЕЙ.name();
                }

                if ((sum >= 120) && (sum < 220)) {
                    sign[i][j] = SignOfZodiac.РЫБЫ.name();
                }

                if ((sum >= 220) && (sum < 320)) {
                    sign[i][j] = SignOfZodiac.ARIES.name();
                }

                if ((sum >= 320) && (sum < 420)) {
                    sign[i][j] = SignOfZodiac.ТЕЛЕЦ.name();
                }

                if ((sum >= 420) && (sum < 520)) {
                    sign[i][j] = SignOfZodiac.БЛИЗНЕЦЫ.name();
                }

                if ((sum >= 520) && (sum < 620)) {
                    sign[i][j] = SignOfZodiac.РАК.name();
                }

                if ((sum >= 620) && (sum < 720)) {
                    sign[i][j] = SignOfZodiac.ЛЕВ.name();
                }

                if ((sum >= 720) && (sum < 820)) {
                    sign[i][j] = SignOfZodiac.ДЕВА.name();
                }

                if ((sum >= 820) && (sum < 920)) {
                    sign[i][j] = SignOfZodiac.ВЕСЫ.name();
                }

                if ((sum >= 920) && (sum < 1020)) {
                    sign[i][j] = SignOfZodiac.СКОРПИОН.name();
                }

                if ((sum >= 1020) && (sum < 1120)) {
                    sign[i][j] = SignOfZodiac.СТРЕЛЕЦ.name();
                }
                if ((sum >= 1120) && (sum < 1131)) {
                    sign[i][j] = SignOfZodiac.КОЗЕРОГ.name();
                }
                if (sum < 20) {
                    sign[i][j] = SignOfZodiac.КОЗЕРОГ.name();
                }
            }

        }
        i = month - 1;
        j = day - 1;

        try {
            signum = SignOfZodiac.valueOf(sign[i][j]);
            return signum;
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.print("Введена не существующая дата  ");
            return signum = null;
        }

    }
}
