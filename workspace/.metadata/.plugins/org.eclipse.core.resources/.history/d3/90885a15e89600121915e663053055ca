package ru.relex.education.Course;

import ru.relex.education.Course.SideOfTheWorld;

    /**
     * Класс расчета требуемой коррекции курса судна при задинии текущего курса и
     * требуемого.
     * 
     * @author Vladimir K.
     * 
     */
    public class Course {
        /**
         *@param course
         *            текущий курс судна
         * @param course2
         *            требуемый курс судна
         * @return градусы угла коррекции
         */
        public static int changeCourse(String course, String course2) {
            SideOfTheWorld side, side2;
            int degrees = 0;
            side = SideOfTheWorld.valueOf(course);
            side2 = SideOfTheWorld.valueOf(course2);

            int rezСourse = side.compareTo(side2);
            //System.out.print(rez);
            if (rezСourse != 0) {
            if (rezСourse > 0) {
                for (int i = 0; i < rezСourse; i++)
                    degrees = degrees - 90;
                if (degrees <= -180)
                    degrees = 360 + degrees;
                        }

            if (rezСourse < 0) {
                for (int i = 0; i < Math.abs(rezСourse); i++)
                    degrees += 90;
                if (degrees > 180)
                    degrees -= 360;
            }
    System.out.print("Change current course on " + degrees + " degrees.");
            }
            
            if (rezСourse == 0)
                System.out.print("Curs right");
            return degrees;
        }

        public static void main(String[] args) {

            Course.changeCourse("NORTH", "EAST");
            // NORTH, EAST, SOUTH, WEST
        
    }
}
